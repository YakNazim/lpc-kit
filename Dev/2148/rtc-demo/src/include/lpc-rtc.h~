
/*
 * lpc-rtc.h
 */

#ifndef _LPC_RTC_H
#define _LPC_RTC_H


// which clock should RTC use?
#define SOURCE_PCLK 0
#define SOURCE_RTCX 1

#include "types.h"

/*
 * initialize
 * -----------------------------------------------
 * initialize the lpc2148 pll 
 * cpu interrupts
 * the uart0 serial port
 * the rtc VIC interrupt
 */
void initialize(void);

/*
 * isLeapYear
 * ------------------------------------------------
 * Returns a bool if year is a leap year.
 */
bool isLeapYear(U16 year);

/*
 * rtc_setTime
 * -----------------------------------------------
 * sets the Time counter group
 * SEC, MIN, HOUR, DOM, MONTH, YEAR
 * This function will calculate the DOW and DOY from
 * the DOM, MONTH, YEAR, and set the DOW and DOY 
 * counters.
 */
void rtc_setTime(U8  sec,
                 U8  min, 
                 U8  hour, 
                 U8  dom,
                 U8  month,
                 U16 year);


/*
 * ordinal_date
 * ----------------------------------------
 * returns the ordinal date from a m/d/y
 */
U16 ordinal_date(U8 month, U8 day, U16 year);

/*
 * dow
 * ------------------------------------
 * Returns the day of the week (SUN=0..SAT=6)
 * http://en.wikipedia.org/wiki/Calculating_the_day_of_the_week#An_algorithm_to_calculate_the_day_of_the_week
 * Bounds checking forces month = 1 and year = 2008
 * for out of bounds month or year.
 */
U8 dow(U16 year, U8 month, U16 day);

/*
 * rtc_init
 * ------------------------------------------------
 * setup the CCR-disable the clock
 * mask the alarms
 * clear the counter increment interrupt register (CIIR)
 * clear the IIR
 * reset and hold the clock tick register
 * enable the clock
 */
void rtc_init(U8 source);


void RTC_isr (void)   __attribute__ ((interrupt("IRQ")));
void RTC_Handler (void)   __attribute__ ((interrupt("IRQ")));

void IRQ_Routine (void)   __attribute__ ((interrupt("IRQ")));
void FIQ_Routine (void)   __attribute__ ((interrupt("FIQ")));
void SWI_Routine (void)   __attribute__ ((interrupt("SWI")));
void UNDEF_Routine (void) __attribute__ ((interrupt("UNDEF")));


#endif
