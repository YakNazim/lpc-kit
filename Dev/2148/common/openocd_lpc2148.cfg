# Configuration for the LPC2148
#

if { [info exists CHIPNAME] } {
   set  _CHIPNAME $CHIPNAME
} else {
   set  _CHIPNAME lpc2148
}

if { [info exists ENDIAN] } {
   set  _ENDIAN $ENDIAN
} else {
   set  _ENDIAN little
}

if { [info exists CPUTAPID ] } {
   set _CPUTAPID $CPUTAPID
} else {
  # force an error till we get a good number
   set _CPUTAPID 0x4f1f0f0f
}

#delays on reset lines
jtag_nsrst_delay 200
jtag_ntrst_delay 200


# NOTE!!! LPCs need reset pulled while RTCK is low. 0 to activate 
# JTAG, power-on reset is not enough, i.e. you need to perform a
# reset before being able to talk to the LPC2148, attach is not
# possible.

#use combined on interfaces or targets that can't set TRST/SRST separately
reset_config trst_and_srst srst_pulls_trst

#jtag scan chain
jtag newtap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID

set _TARGETNAME [format "%s.cpu" $_CHIPNAME]
target create $_TARGETNAME arm7tdmi -endian $_ENDIAN -chain-position $_TARGETNAME -variant arm7tdmi-s_r4
$_TARGETNAME configure -work-area-virt 0 -work-area-phys 0x40000000 -work-area-size 0x4000 -work-area-backup 0
$_TARGETNAME configure -event reset-init {
        # Force target into ARM state
        soft_reset_halt
        #do not remap 0x0000-0x0020 to anything but the flash
        mwb 0xE01FC040 0x01

}


#flash bank lpc2000 <base> <size> 0 0 <target#> <variant>
#flash bank lpc2000 0x0 0x7d000 0 0 0 lpc2000_v2 14765


#----------- Daemon Configuration

telnet_port     4444
gdb_port        3333


# Tell gdb that you can use us to program the device (requires GDB >=6.7 and libexapt)
gdb_memory_map    enable
gdb_flash_program enable

#----------- JTAG Interface Type
source [find interface/olimex-arm-usb-ocd.cfg]
jtag_speed  15       # JTAG clock divider: No PLL means must be at least 15 (which is 1/16th clock speed)


# Time to wait before halting
#                 [JTAG #]  [wait in ms]
#run_and_halt_time 0         30
#run_and_halt_time 0         1000

# Force everything to use hardware breakpoints since we're debugging from flash
#arm7_9 force_hw_bkpts enable
gdb_breakpoint_override enable

#-------- Working area (debugging, on-the-fly coding)

# RAM to use when writing to flash (temporary copy)
# locatations from memory map-ram starts at  0x4000 0000
#working_area  [target#]  [address]    [size]   ['backup'|'nobackup']
#working_area   0          0x40000000   0x8000   nobackup

#-------- Flash configuration

#LPC2148 @ 12MHz / 0x80000 from 512*1024...plus/minus 1 issue, lets not push it.
# 0x0008 0000 is reserved address...
#flash bank [driver] [base] [size]  [chip_width] [bus_width] [target#] [variant]  [freq] [cksum]
flash  bank lpc2000  0      0x80000 0            0           0         lpc2000_v2 12000  calc_checksum

